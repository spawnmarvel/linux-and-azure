[agent]
 interval = "30s" 
 round_interval = true
 metric_batch_size = 1000 
 metric_buffer_limit = 10000 
 collection_jitter = "0s" 
 flush_interval = "30s"
 flush_jitter = "5s" precision = ""
 debug = true
 quiet = false # quiet: Log only error level messages.
 logfile = "C://Program Files//Telegraf//telegraf-1.35.4//telegraf.logs"
 logfile_rotation_max_size = "10MB"
 logfile_rotation_max_archives = 10
 # startup_always_produce_metrics = true
 
# Readme
# https://github.com/influxdata/telegraf/blob/master/docs/CONFIGURATION.md#agent

###############################################################################
#                                  INPUTS                                     #
###############################################################################
[[inputs.file]]
  ## Files to parse each interval.  Accept standard unix glob matching rules,
  ## as well as ** to match recursive files and directories.
  files = ["C://Program Files//Telegraf//telegraf-1.35.4//file//metrics.in.json"]
  
  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  ## data_format = "influx"
  data_format = "json"

# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]
  
###############################################################################
#                                  OUTPUTS                                     #
###############################################################################

# Send telegraf metrics to file(s)
[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["C:/Program Files/Telegraf/telegraf-1.35.4//file//metrics.out.json"]
  
  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  ## data_format = "influx"
  data_format = "json"

# https://github.com/influxdata/telegraf/blob/master/plugins/outputs/amqp/README.md

# Publishes metrics to an AMQP broker
[[outputs.amqp]]
  ## Brokers to publish to.  If multiple brokers are specified a random broker
  ## will be selected anytime a connection is established.  This can be
  ## helpful for load balancing when not using a dedicated load balancer.
  brokers = ["amqp://localhost:5672/"]

  ## Maximum messages to send over a connection.  Once this is reached, the
  ## connection is closed and a new connection is made.  This can be helpful for
  ## load balancing when not using a dedicated load balancer.
  # max_messages = 0

  ## Exchange to declare and publish to.
  exchange = "telegraf"

  ## Exchange type; common types are "direct", "fanout", "topic", "header", "x-consistent-hash".
  exchange_type = "topic"

  ## If true, exchange will be passively declared.
  # exchange_passive = false

  ## Exchange durability can be either "transient" or "durable".
  exchange_durability = "durable"
  
  ## Delivery Mode controls if a published message is persistent.
  ##   One of "transient" or "persistent".
  delivery_mode = "persistent"
  
  ## Connection timeout.  If not provided, will default to 5s.  0s means no
  ## timeout (not recommended).
   timeout = "10s"
  
  ## Authentication credentials for the PLAIN auth_method.
  username = "admin2"
  password = "Linuxrules45Yea"
  
  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  ## data_format = "influx"
  data_format = "json"
  

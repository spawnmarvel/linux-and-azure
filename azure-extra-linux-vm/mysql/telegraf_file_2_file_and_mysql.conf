# Global settings
[agent]
 interval = "25s"
 round_interval = true
 metric_batch_size = 1000
 metric_buffer_limit = 10000
 collection_jitter = "0s"
 flush_interval = "30s"
 flush_jitter = "5s" precision = ""
 debug = true
 quiet = false # quiet: Log only error level messages.
 logfile = "/var/log/telegraf/telegraf.logs"
 logfile_rotation_max_size = "5MB"
 logfile_rotation_max_archives = 10

# Readme
# https://github.com/influxdata/telegraf/blob/master/docs/CONFIGURATION.md#agent

###############################################################################
#                                  INPUTS                                     #
###############################################################################
[[inputs.file]]
  ## Files to parse each interval
  files = ["/var/telegraf_data/metrics.in.json"]

  data_format = "json"
  json_name_key = "measurement"
  json_string_fields = ["quality"]
  tagexclude = ["host"]  # Exclude the "host" tag if not needed

###############################################################################
#                                  OUTPUTS                                     #
###############################################################################


# Send telegraf metrics to file(s)
[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["/var/telegraf_data/metrics.out.json"]

  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  ## data_format = "influx"
  data_format = "json"
  # Output Plugin: SQL (MySQL)
[[outputs.sql]]
  ## Database driver, available drivers are: "mysql", "postgres", "mssql", "sqlite3", "snowflake"
  driver = "mysql"

  ## Data source name (DSN) for MySQL
  ## Format: username:password@tcp(host:port)/dbname?param1=value1&param2=value2
  data_source_name = "telegraf_user:etlaccount1@tcp(127.0.0.1:3306)/telegraf_db?charset=utf8"

  ## Table creation behavior
  ## If true, Telegraf will automatically create tables for measurements
  table_template = "CREATE TABLE IF NOT EXISTS `%s` (time DATETIME NOT NULL, %s, PRIMARY KEY (time))"
  # the above did not work and a new table was created look below, primary key should not be time either, but id

  ## Initialization SQL
  init_sql = "SET sql_mode='ANSI_QUOTES';"

  ## Timestamp column name
  timestamp_column = "time"

  ## Flush interval for writing to the database
  flush_interval = "10s"